<!-- Ant build file - Needs Ant v1.6.x or later -->
<project name="martus" default="release" basedir=".">
    <description>
        Martus Main Build File
    </description>

    <!-- set global properties for this build -->
    <property file="build.properties" />

    <!-- module names and dirs -->
    <property name="martus.module"  value="martus"/>

    <!-- import build files -->
    <import file="build-common.xml" />
    <import file="build-client.xml" />
    <import file="build-server.xml" />

    <!-- meta module name and dirs -->
    <property name="martus.meta.module"  value="martus-meta"/>
    <property name="martus.meta.src.root" value="${build.basedir}/${martus.meta.module}/source"/>
    <property name="martus.meta.class.root" value="${build.basedir}/${martus.meta.module}/bin"/>

    <!-- meta classpath -->
    <path id="meta.class.path">
        <pathelement path="${martus.meta.class.root}/"/>
        <pathelement path="${martus.client.class.root}/"/>
        <pathelement path="${martus.server.class.root}/"/>
        <pathelement path="${martus.common.class.root}/"/>
        <pathelement path="${martus.amplifier.class.root}/"/>
        <pathelement path="${martus.utils.class.root}/"/>
        <pathelement path="${martus.hrdag.class.root}/"/>
        <pathelement path="${martus.logi.class.root}/"/>
        <fileset refid="thirdparty.common.files"/>
        <fileset refid="thirdparty.server.files"/>
        <fileset dir="${build.basedir}/${martus.thirdparty.module}" >
            <include name="libext/JUnit/**/*.jar"/>
        </fileset>
    </path>

    <!-- ================================================================== -->
    <!-- I N I T                                                            -->
    <!-- ================================================================== -->

    <target name="init" unless="init.complete" description="Initialize build number, timestamp and version">
        <tstamp>
            <format property="cvs.year" pattern="yyyy"/>
        </tstamp>

        <tstamp>
            <format property="cvs.month.day" pattern="MMdd"/>
        </tstamp>
        <tstamp/>

        <buildnumber/>

        <echo message="Timestamp for cvs will be ${DSTAMP}" />
        <echo message="Build number is ${build.number}" />
        <echo message="Version is ${martus.version}" />
        <property name="init.complete" value="true"/>
    </target>

    <!-- ================================================================== -->
    <!-- C L E A N                                                          -->
    <!-- ================================================================== -->

  <target name="clean" description="Remove all class files and jars">

    <!-- Remove dis jars & folder -->
    <delete dir="${public.release.folder}"/>

    <!-- Remove class dirs -->
    <delete dir="${martus.jarverifier.class.root}"/>
    <delete dir="${martus.thirdparty.class.root}"/>
    <delete dir="${martus.swing.class.root}"/>
    <delete dir="${martus.server.class.root}"/>
    <delete dir="${martus.mspa.class.root}"/>
    <delete dir="${martus.meta.class.root}"/>
    <delete dir="${martus.logi.class.root}"/>
    <delete dir="${martus.hrdag.class.root}"/>
    <delete dir="${martus.common.class.root}"/>
    <delete dir="${martus.client.class.root}"/>
    <delete dir="${martus.amplifier.class.root}"/>
    <delete dir="${martus.utils.class.root}"/>

  </target>

  <!-- ================================================================== -->
  <!-- B U I L D                                                          -->
  <!-- ================================================================== -->

  <target name="build" depends="build-common,build-server,build-client" description="Compile martus-meta">
    <mkdir dir="${martus.meta.class.root}"/>
    <javac target="1.4" optimize="on" srcdir="${martus.meta.src.root}" destdir="${martus.meta.class.root}" failonerror="true">
            <classpath refid="meta.class.path"/>
            <include name="**/*.java"/>
    </javac>
  </target>

  <!-- ================================================================== -->
  <!-- J A R                                                          -->
  <!-- ================================================================== -->

    <target name="jar" depends="build,jar-common,jar-client,jar-server,jar-mspa" description="Create martus-meta jar">
        <mkdir dir="${public.release.folder}"/>
        <jar destfile="${public.release.folder}/martus-meta-${DSTAMP}.${build.number}.jar">
                <fileset dir="${martus.meta.class.root}" includes="**/*.class"/>

                <fileset refid="server.nosrc.files"/>
                <fileset dir="${martus.server.class.root}" includes="**/*.class"/>

                <fileset refid="mspa.server.class.files"/>

                <fileset refid="amp.nosrc.files"/>
                <fileset dir="${martus.amplifier.class.root}" includes="www/**/*"/>
                <fileset dir="${martus.amplifier.class.root}" includes="**/*.class"/>

                <fileset refid="jarverifier.nosrc.files"/>
                <fileset dir="${martus.jarverifier.class.root}" includes="**/*.class"/>

                <fileset refid="client.nosrc.files"/>
                <fileset dir="${martus.client.class.root}" includes="**/*.class"/>

                <fileset dir="${martus.common.class.root}" includes="**/*.class"/>
                <fileset dir="${martus.utils.class.root}" includes="**/*.class"/>
                <fileset dir="${martus.hrdag.class.root}" includes="**/*.class"/>
                <fileset dir="${martus.logi.class.root}" includes="**/*.class"/>
                <fileset dir="${martus.swing.class.root}" includes="**/*.class"/>
        </jar>
    </target>

    <!-- ================================================================== -->
    <!-- T E S T S                                                          -->
    <!-- ================================================================== -->

    <target name="test" depends="jar" description="Run all tests from the jars">
        <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
            <classpath>
                <fileset dir="${martus.thirdparty.lib.junit}" includes="**/*.jar"/>
                <fileset dir="${martus.thirdparty.lib.ant}" includes="**/*.jar"/>
            </classpath>
        </taskdef>

        <junit fork="true" haltonfailure="yes" printsummary="withOutAndErr" showoutput="yes">
            <classpath>
                <fileset dir="${public.release.folder}" >
                    <include name="*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
                <fileset refid="thirdparty.common.files"/>
                <fileset refid="thirdparty.server.files"/>
                <fileset dir="${martus.thirdparty.lib.junit}" includes="**/*.jar"/>
            </classpath>
            <formatter type="brief" usefile="no" />
            <test name="org.martus.meta.TestAll"/>
        </junit>
    </target>

<!-- ================================================================== -->
<!-- C H E C K  V A R S                                                  -->
<!-- ================================================================== -->
    <target name="check_keypass" unless="sign.keypass">
        <input
            message="Please enter key pw:"
            addproperty="sign.keypass"
        />
    </target>

    <target name="check_storepass" unless="sign.storepass">
        <input
            message="Please enter store pw:"
            addproperty="sign.storepass"
        />
    </target>

    <target name="check_keystore" unless="sign.keystore">
        <input
            message="Please enter keystore location:"
            addproperty="sign.keystore"
        />
    </target>

    <target name="check_cvspass" unless="cvs.pass">
        <input
            message="Please enter CVS password:"
            addproperty="cvs.pass"
        />
    </target>

    <target name="check_cvsroot" unless="cvs.cvsroot">
        <input
            message="Please enter CVS location (:protocol:username@server:path) :"
            addproperty="cvs.cvsroot"
        />
    </target>

<!-- ================================================================== -->
<!-- J A R S I G N E R                                                  -->
<!-- ================================================================== -->

    <target name="jarsign" depends="check_storepass, check_keypass, check_keystore,jar" description="Sign jars">
        <signjar keystore="${sign.keystore}" storepass="${sign.storepass}" keypass="${sign.keypass}" alias="ssmtsjar" >
            <fileset dir="${public.release.folder}">
                <include name="*.jar"/>
            </fileset>
        </signjar>
    </target>

<!-- ================================================================== -->
<!-- M D 5                                                              -->
<!-- ================================================================== -->

    <target name="md5" depends="jar" description="Generate md5 checksum of jars and zips">
        <checksum algorithm="MD5" fileext=".md5">
            <fileset dir="${public.release.folder}">
                <include name="*.jar"/>
                <include name="*.zip"/>
            </fileset>
        </checksum>
    </target>

<!-- ================================================================== -->
<!-- R E L E A S E                                                      -->
<!-- ================================================================== -->

    <target name="release" depends="check_storepass, check_keypass, check_keystore,test,jarsign,zip-client-src,md5">
        <echo message="Release Built."/>
    </target>

</project>

<!-- Ant build file - Needs Ant v1.6.x or later -->
<project name="builder">
    <description>
        Martus Installer Build File
    </description>

    <!-- set global properties for this build -->
    <import file="build.shared.values.xml" />

    <!--
        Download binaries & installer from CVS
    -->
    <target name="cvs.installer.checkout">
        <cvs cvsRoot="${cvs.cvsroot}" quiet="true" reallyquiet="true" dest="${cvs.home}" failonerror="true">
            <commandline>
                <argument value="-q"/>
                <argument value="checkout"/>
                <argument value="${binary.module}/Installer"/>
            </commandline>
        </cvs>
        <available file="${martus.binary.buildfiles.jars}" type="dir" property="buildfiles.jardir.present"/>
        <available file="${martus.binary.buildfiles.sourcesdir}" type="dir" property="buildfiles.sourcesdir.present"/>
        <available file="${martus.binary.buildfiles.licensesdir}" type="dir" property="buildfiles.licensesdir.present"/>
        <available file="${martus.binary.buildfiles.programfilesdir}" type="dir" property="buildfiles.programfilesdir.present"/>
    </target>

    <!--
        ***************************** Jars
    -->
    <target name="buildfiles.create.jars.dir" unless="buildfiles.jardir.present">
        <mkdir dir="${martus.binary.buildfiles.jars}"/>
    </target>

    <target name="buildfiles.move.jars" depends="buildfiles.create.jars.dir">
        <copy todir="${martus.binary.buildfiles.jars}">
            <fileset dir="${martus.thirdparty.lib.infinitemonkey}" includes="**/*.jar"/>
            <fileset dir="${martus.thirdparty.lib.xmlrpc}" includes="**/*.jar"/>
            <fileset dir="${martus.thirdparty.lib.bouncycastle}" includes="**/*.jar"/>
            <fileset dir="${martus.thirdparty.lib.junit}" includes="**/*.jar"/>
            <fileset dir="${martus.thirdparty.lib.jhlabs}" includes="**/*.jar"/>
        </copy>
    </target>

    <!--
        ***************************** Sources
    -->

    <target name="buildfiles.create.sources.dir" unless="buildfiles.sourcesdir.present">
        <mkdir dir="${martus.binary.buildfiles.sourcesdir}"/>
    </target>

    <target name="buildfiles.move.sources" depends="buildfiles.create.sources.dir">
        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/BouncyCastle"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/BouncyCastle">
            <fileset dir="${martus.thirdparty.lib.bouncycastle}/../source" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/InfiniteMonkey"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/InfiniteMonkey">
            <fileset dir="${martus.thirdparty.lib.infinitemonkey}/../source" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Installer/NSIS"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Installer/NSIS">
            <fileset dir="${build.basedir}/${martus.thirdparty.module}/client/installer/Win32/NSIS/source" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Installer/NSIS Scripts/"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Installer/NSIS Scripts">
            <fileset dir="${martus.binary.installer.project}" defaultexcludes="yes">
                <include name="**/*.nsi"/>
                <include name="**/*.nsh"/>
            </fileset>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/junit"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/junit">
            <fileset dir="${martus.thirdparty.lib.junit}/../source" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Logi"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Logi">
            <fileset dir="${martus.thirdparty.lib.logi}/../source" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Sun"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Sun">
            <fileset dir="${build.basedir}/${martus.thirdparty.module}/client/Sun/source" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/xmlrpc"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/xmlrpc">
            <fileset dir="${martus.thirdparty.lib.xmlrpc}/../source" defaultexcludes="yes" includes="**/*"/>
        </copy>
	
	    <mkdir dir="${martus.binary.buildfiles.sourcesdir}/jhlabs"/>
	    <copy todir="${martus.binary.buildfiles.sourcesdir}/jhlabs">
	        <fileset dir="${martus.thirdparty.lib.jhlabs}/../source" defaultexcludes="yes" includes="**/*"/>
	    </copy>
    </target>

    <!--
        ***************************** Licenses
    -->

    <target name="buildfiles.create.licenses.dir" unless="buildfiles.licensesdir.present">
        <mkdir dir="${martus.binary.buildfiles.licensesdir}"/>
    </target>

    <target name="buildfiles.move.licenses" depends="buildfiles.create.licenses.dir">
        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/BouncyCastle"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/BouncyCastle">
            <fileset dir="${martus.thirdparty.lib.bouncycastle}/../license" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/InfiniteMonkey"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/InfiniteMonkey">
            <fileset dir="${martus.thirdparty.lib.infinitemonkey}/../license" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Installer/NSIS"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Installer/NSIS">
            <fileset dir="${build.basedir}/${martus.thirdparty.module}/client/installer/Win32/NSIS/license" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/junit"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/junit">
            <fileset dir="${martus.thirdparty.lib.junit}/../license" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Logi"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Logi">
            <fileset dir="${martus.thirdparty.lib.logi}/../license" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/Sun"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/Sun">
            <fileset dir="${build.basedir}/${martus.thirdparty.module}/client/Sun/license" defaultexcludes="yes" includes="**/*"/>
        </copy>

        <mkdir dir="${martus.binary.buildfiles.sourcesdir}/xmlrpc"/>
        <copy todir="${martus.binary.buildfiles.sourcesdir}/xmlrpc">
            <fileset dir="${martus.thirdparty.lib.xmlrpc}/../license" defaultexcludes="yes" includes="**/*"/>
        </copy>

		<mkdir dir="${martus.binary.buildfiles.sourcesdir}/jhlabs"/>
		<copy todir="${martus.binary.buildfiles.sourcesdir}/jhlabs">
		    <fileset dir="${martus.thirdparty.lib.jhlabs}/../license" defaultexcludes="yes" includes="**/*"/>
		</copy>
    </target>

    <!--
        ***************************** infinite monkey
    -->
    <target name="buildfiles.create.programfiles.dir" unless="buildfiles.programfilesdir.present">
        <mkdir dir="${martus.binary.buildfiles.programfilesdir}"/>
    </target>

    <target name="buildfiles.move.infinitemonkey" depends="buildfiles.create.programfiles.dir">
        <copy todir="${martus.binary.buildfiles.programfilesdir}">
            <fileset dir="${martus.thirdparty.lib.infinitemonkey}" defaultexcludes="yes" includes="*.dll"/>
        </copy>
    </target>

    <!--
        ***************************** martus.jar
    -->
    <target name="buildfiles.move.martusjar" depends="buildfiles.create.programfiles.dir">
        <copy file="${public.release.folder}/martus-client-${DSTAMP}.${build.number}.jar" tofile="${martus.binary.buildfiles.programfilesdir}/martus.jar"/>
    </target>

    <!--
        ***************************** Create and Fix CD documents
    -->
    <target name="create.and.fix.documents">
        <exec dir="." executable="cat" failonerror="true">
            <arg line="${martus.binary.buildfiles}/Documents/license.txt"/>
            <arg line=">"/>
            <arg line="${martus.binary.buildfiles}/combined-license.txt"/>
        </exec>
        <exec dir="." executable="echo" failonerror="true">
            <arg line="-e"/>
            <arg line="\n\n\t**********************************\n\n"/>
            <arg line=">>"/>
            <arg line="${martus.binary.buildfiles}/combined-license.txt"/>
        </exec>
        <exec dir="." executable="cat" failonerror="true">
            <arg line="${martus.binary.buildfiles}/Documents/gpl.txt"/>
            <arg line=">>"/>
            <arg line="${martus.binary.buildfiles}/combined-license.txt"/>
        </exec>
    </target>

    <!--
        Create Installer CD images
    -->
    <target name="build.installers" depends="cvs.installer.checkout,buildfiles.create.jars.dir">

    </target>

</project>

<!-- Ant build file - Needs Ant v1.6.x or later -->
<project name="martus-defines" basedir=".">
    <description>
        Martus Build file containing shared values accross projects
    </description>

    <!-- set global properties for this build -->
    <property file="build.properties" />

    <!-- CVS_ROOT -->
    <property name="cvs.cvsroot" value=":${cvs.protocol}:${cvs.username}@${cvs.location}:${cvs.repository}"/>

    <!-- module names and dirs -->

    <property name="martus.module" value="martus"/>
    <property name="binary.module" value="binary-martus"/>

    <!-- client module name and dirs -->
    <property name="martus.client.module"  value="martus-client"/>
    <property name="martus.client.src.root" value="${build.basedir}/${martus.client.module}/source"/>
    <property name="martus.client.class.root" value="${build.basedir}/${martus.client.module}/bin"/>

    <!-- hrdag module name and dirs -->
    <property name="martus.hrdag.module"  value="martus-hrdag"/>
    <property name="martus.hrdag.src.root" value="${build.basedir}/${martus.hrdag.module}/source"/>
    <property name="martus.hrdag.class.root" value="${build.basedir}/${martus.hrdag.module}/bin"/>

    <!-- jarverifier module name and dirs -->
    <property name="martus.jarverifier.module"  value="martus-jar-verifier"/>
    <property name="martus.jarverifier.src.root" value="${build.basedir}/${martus.jarverifier.module}/source"/>
    <property name="martus.jarverifier.class.root" value="${build.basedir}/${martus.jarverifier.module}/bin"/>

    <!-- amplifier module name and dirs -->
    <property name="martus.amplifier.module"  value="martus-amplifier"/>
    <property name="martus.amplifier.src.root" value="${build.basedir}/${martus.amplifier.module}/source"/>
    <property name="martus.amplifier.class.root" value="${build.basedir}/${martus.amplifier.module}/bin"/>

    <!-- utils module name and dirs -->
    <property name="martus.utils.module" value="martus-utils"/>
    <property name="martus.utils.src.root" value="${build.basedir}/${martus.utils.module}/source"/>
    <property name="martus.utils.class.root" value="${build.basedir}/${martus.utils.module}/bin"/>

    <!-- swing module name and dirs -->
    <property name="martus.swing.module"  value="martus-swing"/>
    <property name="martus.swing.src.root" value="${build.basedir}/${martus.swing.module}/source"/>
    <property name="martus.swing.class.root" value="${build.basedir}/${martus.swing.module}/bin"/>

    <!-- server module name and dirs -->
    <property name="martus.server.module"  value="martus-server"/>
    <property name="martus.server.src.root" value="${build.basedir}/${martus.server.module}/source"/>
    <property name="martus.server.class.root" value="${build.basedir}/${martus.server.module}/bin"/>

    <!-- mspa module name and dirs -->
    <property name="martus.mspa.module"  value="martus-mspa"/>
    <property name="martus.mspa.src.root" value="${build.basedir}/${martus.mspa.module}/source"/>
    <property name="martus.mspa.class.root" value="${build.basedir}/${martus.mspa.module}/bin"/>

    <!-- meta module name and dirs -->
    <property name="martus.meta.module"  value="martus-meta"/>
    <property name="martus.meta.src.root" value="${build.basedir}/${martus.meta.module}/source"/>
    <property name="martus.meta.class.root" value="${build.basedir}/${martus.meta.module}/bin"/>

    <!-- logi module name and dirs -->
    <property name="martus.logi.module"  value="martus-logi"/>
    <property name="martus.logi.src.root" value="${build.basedir}/${martus.logi.module}/source"/>
    <property name="martus.logi.class.root" value="${build.basedir}/${martus.logi.module}/bin"/>

    <!-- client common name and dirs -->
    <property name="martus.common.module"  value="martus-common"/>
    <property name="martus.common.src.root" value="${build.basedir}/${martus.common.module}/source"/>
    <property name="martus.common.class.root" value="${build.basedir}/${martus.common.module}/bin"/>

    <!-- thirdparty module name and dirs -->
    <property name="martus.thirdparty.module"  value="martus-thirdparty"/>

    <property name="martus.thirdparty.lib.xmlrpc"  value="${build.basedir}/${martus.thirdparty.module}/common/XMLRPC/bin/"/>
    <property name="martus.thirdparty.lib.infinitemonkey"  value="${build.basedir}/${martus.thirdparty.module}/common/InfiniteMonkey/bin/"/>
    <property name="martus.thirdparty.lib.ant"  value="${build.basedir}/${martus.thirdparty.module}/common/Ant/bin/"/>
    <property name="martus.thirdparty.lib.logi"  value="${build.basedir}/${martus.thirdparty.module}/common/Logi/bin/"/>

    <property name="martus.thirdparty.lib.lucene"  value="${build.basedir}/${martus.thirdparty.module}/server/Lucene/bin/"/>
    <property name="martus.thirdparty.lib.jetty"  value="${build.basedir}/${martus.thirdparty.module}/server/Jetty/bin/"/>
    <property name="martus.thirdparty.lib.velocity"  value="${build.basedir}/${martus.thirdparty.module}/server/Velocity/bin/"/>

    <property name="martus.thirdparty.lib.junit"  value="${build.basedir}/${martus.thirdparty.module}/libext/JUnit/bin/"/>
    <property name="martus.thirdparty.lib.bouncycastle"  value="${build.basedir}/${martus.thirdparty.module}/libext/BouncyCastle/bin/"/>

    <!-- binary-martus module name and dirs -->
    <property name="martus.binary.module"  value="binary-martus"/>
    <property name="martus.binary.installer"  value="${build.basedir}/${martus.binary.module}/Installer"/>
    <property name="martus.binary.installer.project"  value="${build.basedir}/${martus.binary.module}/Win32_NSIS"/>
    <property name="martus.binary.buildfiles"  value="${martus.binary.installer}/BuildFiles"/>
    <property name="martus.binary.buildfiles.jars"  value="${martus.binary.installer}/BuildFiles/Jars"/>
    <property name="martus.binary.buildfiles.sourcesdir"  value="${martus.binary.installer}/BuildFiles/SourceFiles"/>
    <property name="martus.binary.buildfiles.licensesdir"  value="${martus.binary.installer}/BuildFiles/Documents/Licenses"/>
    <property name="martus.binary.buildfiles.programfilesdir"  value="${martus.binary.installer}/BuildFiles/ProgramFiles"/>

</project>


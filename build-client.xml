<!-- Ant build file - Needs Ant v1.6.x or later -->
<project name="martus-client" default="notify-client" basedir=".">
    <description>
        Martus Client Build File
    </description>

    <!-- imports -->
    <import file="build.shared.values.xml" />
    <import file="build-thirdparty.xml" />
    <import file="build-jarverifier.xml" />
    <import file="build-js-xml-generator.xml" />

    <!-- client classpath -->
    <path id="client.class.path">
        <pathelement path="${martus.common.class.root}/"/>
        <pathelement path="${martus.client.class.root}/"/>
        <pathelement path="${martus.jarverifier.class.root}"/>
        <pathelement path="${martus.hrdag.class.root}"/>
        <pathelement path="${martus.utils.class.root}/"/>
        <pathelement path="${martus.swing.class.root}"/>
        <pathelement path="${martus.logi.class.root}"/>
        <pathelement path="${martus.clientside.class.root}"/>
        <pathelement path="${martus.jsxmlgenerator.class.root}"/>
        <fileset dir="${martus.thirdparty.lib.junit}" includes="**/*.jar"/>
        <fileset dir="${martus.thirdparty.lib.infinitemonkey}" includes="**/*.jar"/>
        <fileset dir="${martus.thirdparty.lib.xmlrpc}" includes="**/*.jar"/>
        <fileset dir="${martus.thirdparty.lib.velocity}" includes="**/*.jar"/>
    </path>

    <!-- client files -->
    <fileset id="client.nosrc.files" dir="${martus.client.src.root}">
        <include name="**/*.png"/>
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
        <include name="**/*.mlp"/>
        <include name="org/martus/client/test/Sample*.*"/>
        <include name="org/martus/client/swingui/Martus-*.mtf"/>
        <include name="org/martus/client/swingui/MartusHelp-*.txt"/>
        <include name="org/martus/client/swingui/MartusHelpTOC-*.txt"/>
        <include name="org/martus/client/swingui/UnofficialTranslationMessage.txt"/>
        <include name="org/martus/client/swingui/UnofficialTranslationMessageRtoL.txt"/>
    </fileset>

    <target name="notify-client">
        <echo message="This is not a standalone build file. Please run these tasks thru the main build-meta.xml."/>
    </target>

  <!-- ================================================================== -->
  <!-- B U I L D                                                          -->
  <!-- ================================================================== -->

    <target name="build-client" depends="build-common,build-clientside,build-js-xml-generator" description="Compile martus-client">
        <mkdir dir="${martus.client.class.root}"/>
        <javac target="1.4" optimize="on" srcdir="${martus.client.src.root}" destdir="${martus.client.class.root}" failonerror="true">
            <classpath refid="client.class.path"/>
            <include name="**/*.java"/>
        </javac>

        <!-- Copy client files that are needed for the jars -->
        <copy todir="${martus.client.class.root}" >
            <fileset refid="client.nosrc.files"/>
        </copy>
    </target>

<!-- ================================================================== -->
<!-- T E S T S                                                          -->
<!-- ================================================================== -->

  <target name="test-client" depends="jar-client">
        <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
            <classpath>
                <fileset dir="${martus.thirdparty.lib.junit}" includes="**/*.jar"/>
                <fileset dir="${martus.thirdparty.lib.ant}" includes="**/*.jar"/>
            </classpath>
        </taskdef>
        <junit fork="true" haltonfailure="yes" printsummary="withOutAndErr">
            <jvmarg value="-Xbootclasspath/p:${public.release.folder}/bc-jce-${DSTAMP}.${build.number}.jar"/>
            <jvmarg value="-Xbootclasspath/p:${martus.thirdparty.lib.bouncycastle}/bcprov-jdk14-${bouncycastle.version}.jar"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <fileset dir="${public.release.folder}" >
                    <include name="martus-client-${DSTAMP}.${build.number}.jar"/>
                </fileset>
                <fileset dir="${martus.thirdparty.lib.junit}" includes="**/*.jar"/>
                <fileset dir="${martus.thirdparty.lib.infinitemonkey}" includes="**/*.jar"/>
                <fileset dir="${martus.thirdparty.lib.xmlrpc}" includes="**/*.jar"/>
            </classpath>
            <formatter type="brief" usefile="no" />
            <test name="org.martus.client.test.TestAll"/>
        </junit>
  </target>

  <!-- ================================================================== -->
  <!-- J A R                                                          -->
  <!-- ================================================================== -->

    <target name="jar-client" depends="build-client" description="Create martus-client jar">
        <mkdir dir="${public.release.folder}"/>
        <jar destfile="${public.release.folder}/martus-client-${DSTAMP}.${build.number}.jar" manifest="${martus.client.src.root}/org/martus/client/core/main-class.txt">
            <fileset refid="client.nosrc.files"/>
            <fileset dir="${martus.client.class.root}" includes="**/*.class"/>

            <fileset refid="jarverifier.nosrc.files"/>
            <fileset dir="${martus.jarverifier.class.root}" includes="**/*.class"/>

            <fileset dir="${martus.common.class.root}">
                <include name="**/*.class"/>
                <include name="**/*.SIG"/>
            </fileset>
            <fileset dir="${martus.utils.class.root}" includes="**/*.class"/>
            <fileset dir="${martus.hrdag.class.root}" includes="**/*.class"/>
            <fileset dir="${martus.logi.class.root}" includes="**/*.class"/>
            <fileset dir="${martus.swing.class.root}" includes="**/*.class"/>
            <fileset dir="${martus.clientside.class.root}" includes="**/*.class"/>

            <fileset refid="jsxmlgenerator.nosrc.files"/>
            <fileset dir="${martus.jsxmlgenerator.class.root}" includes="**/*.class"/>
        </jar>
    </target>

    <target name="jarsign-client" depends="check_keystore,check_keystore_location,fail_keystore_missing,check_storepass,check_keypass,jar-client" description="Sign Client jar">
        <property name="client-filename" value="${public.release.folder}/martus-client-${DSTAMP}.${build.number}.jar"/>
        <signjar keystore="${sign.keystore}" storepass="${sign.storepass}" keypass="${sign.keypass}" alias="ssmtsjar" jar="${client-filename}"/>
    </target>

<!-- ================================================================== -->
<!-- Z I P  -  S O U R C E S                                            -->
<!-- ================================================================== -->
    <target name="zip-client-src" depends="init,zip-bcjce-src">
        <mkdir dir="${public.release.folder}"/>
        <property name="zip-filename"  value="${public.release.folder}/martus-client-${DSTAMP}.${build.number}-src.zip"/>

        <zip zipfile="${zip-filename}">
            <fileset refid="client.nosrc.files"/>
            <fileset dir="${martus.client.src.root}" includes="**/*.java"/>

            <fileset refid="jarverifier.nosrc.files"/>
            <fileset dir="${martus.jarverifier.src.root}" includes="**/*.java"/>
			
			<fileset refid="jsxmlgenerator.nosrc.files"/>
			<fileset dir="${martus.jsxmlgenerator.src.root}" includes="**/*.java"/>

			<fileset dir="${martus.jsxmlgenerator.docs.root}">
	            <include name="**/*.*"/>
	        </fileset>
	 				

			<fileset dir="${martus.common.src.root}">
                <include name="**/*.java"/>
                <include name="**/*.SIG"/>
            </fileset>
            <fileset dir="${martus.clientside.src.root}" includes="**/*.java"/>
            <fileset dir="${martus.utils.src.root}" includes="**/*.java"/>
            <fileset dir="${martus.hrdag.src.root}" includes="**/*.java"/>
            <fileset dir="${martus.logi.src.root}" includes="**/*.java"/>
            <fileset dir="${martus.swing.src.root}" includes="**/*.java"/>
        	<fileset dir="${binary.module}" includes="BuildFiles/Documents/license.txt"/>
        	<fileset dir="${binary.module}" includes="BuildFiles/Documents/gpl.txt"/>
        	
            <fileset dir="${build.basedir}">
            	<!-- We now include jar's in source zip file <exclude name="${martus.thirdparty.module}/**/bin/*"/> -->
                <exclude name="${martus.thirdparty.module}/client/Fonts/**/*"/>
				
				<exclude name="${martus.thirdparty.module}/client/RhinoJavaScript/docs/**/*"/>
				<exclude name="${martus.thirdparty.module}/client/RhinoJavaScript/examples/**/*"/>
				<exclude name="${martus.thirdparty.module}/client/RhinoJavaScript/toolsrc/**/*"/>
				<exclude name="${martus.thirdparty.module}/client/RhinoJavaScript/xmlimpsrc/**/*"/>
				<exclude name="${martus.thirdparty.module}/client/RhinoJavaScript/*"/>

                <include name="${martus.thirdparty.module}/libext/**/*"/>
                <include name="${martus.thirdparty.module}/common/**/*"/>
                <include name="${martus.thirdparty.module}/client/**/*"/>
                <include name="${martus.binary.installer.project}/**/*.nsi"/>
                <include name="${martus.binary.installer.project}/**/*.nsh"/>
				
				<include name="${martus.module}/**/MartusIntoEclipse.txt"/>
            </fileset>
            <fileset dir="${public.release.folder}" includes="bc-jce-src.zip"/>
        </zip>
    </target>

</project>

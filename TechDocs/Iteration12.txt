Project:	MartusClient
Iteration:	12
Begin:		October 15
End:		October 26
Developers:	Kevin

Expectations:
-------------
Workdays: 6
Velocity: 6

Committed Stories:

1. Finish implementing new Bulletin Storage Format [1]

2. Finish extracting multiple language translation files [.5]

3. Research and write up Encryption plan [1]

4. Cut and paste UI [.75]
Add right-click and menubar interfaces for cut/copy/paste.

5. Implement encryption [3]

Stories that might get done:

Stories added during the iteration:

6. Speed up disk access [1]
The new storage format is slower than the old one. Speed it up.


Results:
--------
Workdays: 5.25
Velocity: ~5.25

Pairing: 

Story 1: Spent .5 days finishing code in Database class. Then spent .25 
days integrating, Spent .5 days fixing a speed problem by fixing autosave 
to only save changed bulletins, and not everything. Another .5 days 
completing the integration, refactoring, and speeding up unit tests. 
Total: 2 days

Story 3: Spent an hour writing an initial draft. Spent another three hours 
researching and updating. Total: .5 days.

Story 4: Took .75 days implementing right-click menus for cut/copy/etc. 
Marc agreed to postpone work on the Edit menubar menu. Total: .75 days

Story 2: Spent .25 days to dynamically load both the list of available UI 
languages, and dynamically loading each language file itself. 
Total: .25 days.

Story 6: Spent most of one day speeding up the disk access by building and 
keeping an in-memory index of keys. Also included some nice refactoring.
Total: 1 day.

Story 5: Created a utility method to create public/private key pairs (not 
yet used in Martus). Created utility methods to create and verify digital 
signatures (not yet used in Martus). Created utility methods to create 
and verify digests (aka hashes), and updated Martus to store the password 
encrypted. Total: .75 days.


Issues:
-------
I still haven't put much time into Acceptance Tests. My latest thinking is 
that it will be more productive to extend Unit Tests into the GUI than to 
work with a WinRunner-type testing tool. Recently this has not affected 
velocity as much, but it is still important for the long run.

Creating release packages is also necessary, but perhaps it would make sense 
to postpone this until we start working on the install package itself.
-------

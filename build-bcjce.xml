<!-- Ant build file - Needs Ant v1.6.x or later -->
<project name="martus-bc-jce" default="notify-bc-jce" basedir=".">
    <description>
        Martus BC-JCE Build File
    </description>

    <!-- imports -->
    <import file="build.shared.values.xml" />

    <!-- bc-jce classpath -->
    <path id="bcjce.class.path">
        <fileset dir="${martus.thirdparty.lib.bouncycastle}" includes="**/*.jar"/>
    </path>

    <target name="notify-bc-jce">
        <echo message="This is not a standalone build file. Please run these tasks thru the main build-meta.xml."/>
    </target>

  <!-- ================================================================== -->
  <!-- B U I L D                                                          -->
  <!-- ================================================================== -->

    <target name="build-bc-jce" depends="init" description="Compile bc-jce">
        <mkdir dir="${martus.bcjce.class.root}"/>
        <javac target="1.4" optimize="on" srcdir="${martus.bcjce.src.root}" destdir="${martus.bcjce.class.root}" failonerror="true">
            <classpath refid="bcjce.class.path"/>
            <include name="**/*.java"/>
        </javac>
    </target>

  <!-- ================================================================== -->
  <!-- J A R                                                              -->
  <!-- ================================================================== -->

      <!-- create bc-jce jar -->
      <target name="jar-bc-jce" depends="build-bc-jce" description="Create bc-jce jar">
          <property name="bc-jce-filename" value="${public.release.folder}/bc-jce-${DSTAMP}.${build.number}.jar"/>
          <mkdir dir="${public.release.folder}"/>
          <jar destfile="${bc-jce-filename}">
	          	<manifest>
	          		<attribute name="Sealed" value="true"/>
	          	</manifest>
                <fileset dir="${martus.bcjce.class.root}" includes="**/*.class"/>
                <fileset dir="${martus.bcjce.class.root}/.." includes="LICENSE.html"/>
          </jar>
    </target>
    
    <target name="jarsign-bc-jce" depends="check_keystore,check_keystore_location,fail_keystore_missing,check_storepass,check_keypass,jar-bc-jce" description="Sign jars">
    	<property name="bc-jce-filename" value="${public.release.folder}/bc-jce-${DSTAMP}.${build.number}.jar"/>
        <signjar keystore="${sign.keystore}" storepass="${sign.storepass}" keypass="${sign.keypass}" alias="ssmtsjar" jar="${bc-jce-filename}"/>
          <!-- extract the sf file to martus-common\source\org\martus\common\crypto\ -->
		 <unzip src="${bc-jce-filename}" dest="${martus.common.src.root}\org\martus\common\crypto\">
			    <patternset>
		<include name="META-INF/SSMTSJAR.SF"/>
			    </patternset>
		</unzip>
	<move file="${martus.common.src.root}\org\martus\common\crypto\META-INF\SSMTSJAR.SF" todir="${martus.common.src.root}\org\martus\common\crypto" />
	<delete dir="${martus.common.src.root}\org\martus\common\crypto\META-INF"/>
    </target>

<!-- ================================================================== -->
<!-- Z I P  -  S O U R C E S                                            -->
<!-- ================================================================== -->
    <target name="zip-bcjce-src" depends="init">
        <mkdir dir="${public.release.folder}"/>
        <property name="zip-bcjce-filename"  value="${public.release.folder}/martus-bc-jce-${DSTAMP}.${build.number}-src.zip"/>

        <zip zipfile="${zip-bcjce-filename}">
            <fileset dir="${martus.bcjce.src.root}" includes="**/*.java"/>
            <fileset dir="${martus.bcjce.src.root}/.." includes="LICENSE.html"/>
        </zip>
        <copy file="${zip-bcjce-filename}" tofile="${public.release.folder}/bc-jce-src.zip" />
    </target>

</project>
